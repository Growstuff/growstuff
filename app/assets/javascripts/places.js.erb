if (document.getElementById("placesmap") !== null) {
  var placesBasePath           = "/places";
  var mapboxMapId              = "<%= Rails.env == 'test' ? 0 : Growstuff::Application.config.mapbox_map_id %>";
  var mapboxBaseUrl            = "https://c.tiles.mapbox.com/v3/" + mapboxMapId + "/{z}/{x}/{y}.png";
  var nominatimBaseUrl         = 'http://nominatim.openstreetmap.org/search/';
  var nominatumUserAgentEmail  = "<%= Rails.env == 'test' ? 0 : Growstuff::Application.config.user_agent_email %>";

  L.Icon.Default.imagePath = '/assets'

  var placesmap,
      mapEndpoint,
      place,
      options = {},
      currentPath = location.pathname
      ;

  if (currentPath === "/") {
    options = {
      touchZoom       : false,
      scrollWheelZoom : false,
    };
  }

  placesmap = L.map('placesmap', options)  

  if (currentPath === "/") {

    var timer,
    delay = 500,
    newPlaceInput = $('#new_place')
    ;

    newPlaceInput.bind('input', function() {
      window.clearTimeout(timer);
      timer = window.setTimeout(function() {
        place = newPlaceInput.val();
        if (place.length < 3)
          return;
        fetchPlace(place)
        .done(function(data) {
          var firstMatch = data[0];
          placesmap.setView([firstMatch.lat, firstMatch.lon], 5);
        });
      }, delay);
    });

    newPlaceInput.keyup(function(event) {
      if (event.keyCode == 13) {
        fetchPlace(place)
        .done(function(data) {
          var firstMatch = data[0];
          placesmap.setView([firstMatch.lat, firstMatch.lon], 5);
        });
      }
    });
  }

  if (currentPath ===  "/" || currentPath === placesBasePath) {
    mapEndpoint = placesBasePath;
    placesmap.setView([14, -0.0], 2);
    showMap(placesmap);
  } else { 
    // specific place page
    mapEndpoint = currentPath;
    place = currentPath.replace(placesBasePath + "/", '');
    fetchPlace(place)
    .done(function(data) {
      var firstMatch = data[0];
      placesmap.setView([firstMatch.lat, firstMatch.lon], 5);
      showMap(placesmap);
    });
  }
}

function fetchPlace(place) {
  var nominatimQueryUrl = nominatimBaseUrl + place;
  var nominatimOptions = {
    format    : "json",
    callback  : "placeholder",
    limit     : 1,
    email     : nominatumUserAgentEmail
  };
  return $.getJSON(nominatimQueryUrl, nominatimOptions);
}

function showMap(placesmap) {
  var markers,
      thingsToMap
      ;

  L.tileLayer(mapboxBaseUrl, {
    attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors under <a href="http://www.openstreetmap.org/copyright">ODbL</a> | Map imagery &copy; <a href="http://mapbox.com">Mapbox</a>',
    maxZoom: 18
  }).addTo(placesmap);
  
  markers = new L.MarkerClusterGroup({showCoverageOnHover: false, maxClusterRadius: 20 });
  thingsToMap = mapEndpoint + '.json';

  $.getJSON(thingsToMap, function(members) {
    $.each(members, function(i, m) {
      var marker,
          link,
          where
          ;
      if (m.latitude && m.longitude) {
        marker = new L.Marker(new L.LatLng(m.latitude, m.longitude));
        link   = "<p><a href='/members/" + m.slug + "'>" + m.login_name + "</a></p>";
        where  = "<p><i>" + m.location + "</i></p>";
        marker.bindPopup(link + where).openPopup();
        markers.addLayer(marker);
      }
    });
  });

  placesmap.addLayer(markers);
}
